<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.xebia.ldi</groupId>
    <artifactId>ccloud-registry-docker-action</artifactId>
    <version>0.0.2-SNAPSHOT</version>

    <developers>
        <developer>
            <id>ldivad</id>
            <name>Lo√Øc DIVAD</name>
            <email>ldivad@xebia.fr</email>
            <organization>XebiaFrance</organization>
            <roles>
                <role>maintainer</role>
            </roles>
            <url>https://blog.loicmdivad.com</url>
            <organizationUrl>https://xebia.fr/</organizationUrl>
        </developer>
    </developers>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <action.owner />
        <target.version />
        <coveralls.token />
        <dockerhub.password />
        <docker.auth.username />
        <docker.auth.password />
        <docker.url>docker.pkg.github.com</docker.url>
        <docker.repo>${action.owner}/ccloud-registry-action</docker.repo>
        <docker.image.name>${project.artifactId}</docker.image.name>
        <docker.image.url>${docker.url}/${docker.repo}/${docker.image.name}:${project.version}</docker.image.url>

        <confluent.version>5.3.2</confluent.version>
        <logback.version>1.2.3</logback.version>
        <config.version>1.4.0</config.version>
        <junit.version>5.5.2</junit.version>
        <better-monads.version>0.4.1</better-monads.version>
        <snake-yaml.version>1.25</snake-yaml.version>

        <hamcrest.version>2.2</hamcrest.version>
        <junit-pioneer.version>0.5.3</junit-pioneer.version>
        <junit-surefire-provider.version>1.3.2</junit-surefire-provider.version>
        <testcontainers.version>1.12.5</testcontainers.version>

        <jib.plugin.version>1.8.0</jib.plugin.version>
        <buildhelper-maven-plugin.version>3.0.0</buildhelper-maven-plugin.version>
        <coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-replacer-plugin.version>1.5.3</maven-replacer-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-jacoco-plugin.version>0.8.5</maven-jacoco-plugin.version>
        <maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>

        <it.only />
    </properties>

    <scm>
        <tag>HEAD</tag>
        <url>https://github.com/${action.owner}/ccloud-registry-action.git</url>
        <connection>scm:git:https://github.com/${action.owner}/ccloud-registry-action.git</connection>
        <developerConnection>scm:git:https://github.com/${action.owner}/ccloud-registry-action.git</developerConnection>
    </scm>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub ${action.owner} Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/${action.owner}/ccloud-registry-action</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${config.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jason-goodwin</groupId>
            <artifactId>better-monads</artifactId>
            <version>${better-monads.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-client</artifactId>
            <version>${confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${snake-yaml.version}</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${junit-surefire-provider.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit-pioneer</groupId>
            <artifactId>junit-pioneer</artifactId>
            <version>${junit-pioneer.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${buildhelper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>add-it-resource</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/it/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-it-source</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${it.only}</skip>
                            <includes>
                                <include>**/*Test.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*It.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>it-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*It.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*Test.java</exclude>
                            </excludes>
                            <systemProperties>
                                <property>
                                    <name>config.file</name>
                                    <value>${project.build.testOutputDirectory}/application-it.conf</value>
                                </property>
                                <property>
                                    <name>logback.configurationFile</name>
                                    <value>${project.build.testOutputDirectory}/logback-it.xml</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <goals>
                        deploy
                        jib:build@dockerhub-repo
                        jib:build@github-packages
                    </goals>
                    <preparationGoals>
                        clean verify
                        replacer:replace@version
                        scm:checkin@commit-prepare
                    </preparationGoals>
                    <completionGoals>
                        replacer:replace@unversion
                        scm:checkin@commit-perform
                    </completionGoals>
                    <pushChanges>false</pushChanges>
                    <localCheckout>true</localCheckout>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <checkModificationExcludes>
                        <checkModificationExclude>**</checkModificationExclude>
                    </checkModificationExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>${maven-scm-plugin.version}</version>
                <executions>
                    <execution>
                        <id>commit-prepare</id>
                        <configuration>
                            <pushChanges>false</pushChanges>
                            <message>[maven-release-plugin] prepare release ${project.version}</message>
                        </configuration>
                    </execution>
                    <execution>
                        <id>commit-perform</id>
                        <configuration>
                            <pushChanges>false</pushChanges>
                            <message>[maven-release-plugin] prepare for next development iteration</message>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>${maven-replacer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>version</id>
                        <configuration>
                            <file>../action.yml</file>
                            <replacements>
                                <replacement>
                                    <token>%VERSION%</token>
                                    <value>${project.version}</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unversion</id>
                        <configuration>
                            <file>../action.yml</file>
                            <replacements>
                                <replacement>
                                    <token>${target.version}</token>
                                    <value>%VERSION%</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.plugin.version}</version>
                <executions>
                    <execution>
                        <id>github-packages</id>
                        <configuration>
                            <to>
                                <auth>
                                    <username>${docker.auth.username}</username>
                                    <password>${docker.auth.password}</password>
                                </auth>
                                <image>${docker.image.url}</image>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                            </to>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- temporary upload to dockerhub until Github Packages lets us
                             pull images from public repositories without authentication -->
                        <id>dockerhub-repo</id>
                        <configuration>
                            <to>
                                <auth>
                                    <username>loicmdivad</username>
                                    <password>${dockerhub.password}</password>
                                </auth>
                                <image>loicmdivad/ccloud-registry-action</image>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                            </to>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>fr/xebia/ldi/error/*</exclude>
                        <exclude>fr/xebia/ldi/Validation.*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>${coveralls-maven-plugin.version}</version>
                <configuration>
                    <repoToken>${coveralls.token}</repoToken>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
